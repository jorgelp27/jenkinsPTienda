# version: '3.1'

# services:

#   psql-db:
#     image: postgres:12.1-alpine
#     ports:
#       - ${POSTGRES_PORT_EXTERNAL}:5432
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}
#       - POSTGRES_DB=${DB_NAME}
#     container_name: apiTienda
#     volumes:
#       - psql-db-data:/var/lib/postgresql/data
#     networks:
#       - ws-network

# volumes:
#   psql-db-data:

# networks:
#   ws-network:


# version: '3.8'
# services:
#   api:
#     build: .
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: dbname
#       POSTGRES_HOST: db
#       POSTGRES_PORT: 5432
#       NODE_ENV: production
#     ports:
#       - 3000:3000
#     depends_on:
#       - db
#   db:
#     image: postgres:14-alpine
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: dbname
#     ports:
#       - 5432:5432
#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:80
#     depends_on:
#       - api
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf




# version: '3.8'
# services:
#   api:
#     build: .
#     environment:
#       DB_USER: ${DB_USER}
#       DB_PASS: ${DB_PASS}
#       DB_NAME: ${DB_NAME}
#       DB_HOST: ${DB_HOST}
#       DB_PORT: ${DB_PORT}
#       NODE_ENV: ${NODE_ENV}
#     env_file:
#       - .env
#     ports:
#       - 3000:3000
#     depends_on:
#       - db
#   db:
#     image: postgres:14-alpine
#     restart: always
#     environment:
#       DB_USER: ${DB_USER}
#       DB_PASS: ${DB_PASS}
#       POSTGRES_DB: ${DB_NAME}
#     ports:
#       - ${W_PORT}:5432
#     env_file:
#       - .env
#   nginx:
#     image: nginx:latest
#     ports:
#       - 80:80
#     depends_on:
#       - api
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf



# version: "3.8"

# services:
#   db:
#     container_name: bdpostgre
#     image: postgres:14.3
#     restart: always
#     ports:
#       - ${DB_PORT}:5432
#     environment:
#       POSTGRES_PASSWORD: ${DB_PASS}
#       POSTGRES_DB: ${DB_NAME}
#       POSTGRES_USER: ${DB_USER}
#     volumes:
#       - ./postgres:/var/lib/postgresql/data
  
#   api:
#     container_name: apiTienda
#     build:
#       context: ./
#       dockerfile: ./Dockerfile
#       args:
#         - PROYECTO=myproject
#         - DB_HOST=db
#         - DB_NAME=mydatabase
#         - DB_USER=postgres
#         - DB_PASS=mysecretpassword
#         - DB_PORT=${DB_PORT}
#         - NEST_PORT=${NEST_PORT}
#     ports:
#       - ${NEST_PORT}:80
#     env_file:
#       - .env
#     volumes:
#       - ./web:/var/www/html
#       - ./logs:/var/logs


version: "3.8"

services:
  app:
    container_name: app_nextjs
    build:
      context: ./app_nest
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    restart: always






